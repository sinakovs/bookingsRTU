{{define "base"}}
    <!doctype html>
    <html lang="en">

    <head>
        <!-- Required meta tags -->
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

        <title>My Nice Page</title>

        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.min.css" 
            integrity="sha384-B0vP5xmATw1+K9KRQjQERJvTumQW0nPEzvF6L/Z6nronJ3oUOFUFpCjEUQouq2+l" crossorigin="anonymous">
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.3.4/dist/css/datepicker-bs4.min.css">
        <link rel="stylesheet" type="text/css" href="https://unpkg.com/notie/dist/notie.min.css">
        <link rel="stylesheet" type="text/css" href="/static/css/styles.css">
    
        <style>
        .btn-outline-secondary{
            color: gray;
            border-color: red;
        }
        </style>

     </head>

    <body>

    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
        <a class="navbar-brand" href="#">Navbar</a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
          <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
          <ul class="navbar-nav">
            <li class="nav-item active">
              <a class="nav-link" href="/">Home <span class="sr-only">(current)</span></a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/about">About</a>
            </li>
            <li class="nav-item dropdown">
              <a class="nav-link dropdown-toggle" href="#" id="navbarDropdownMenuLink" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Rooms
              </a>
              <div class="dropdown-menu" aria-labelledby="navbarDropdownMenuLink">
                <a class="dropdown-item" href="/first-room">First room</a>
                <a class="dropdown-item" href="/second-room">Second room</a>
              </div>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/search-availability">Book Now</a>
              </li>
            <li class="nav-item">
              <a class="nav-link" href="/contact">Contact</a>
            </li>

            <li class="nav-item">
              <a class="nav-link" href="/make-reservation">Make Reservation</a>
            </li>

            <li class="nav-item">
              <a class="nav-link" href="/reservation-summary">Your Reservation</a>
            </li>
            
          </ul>
        </div>
      </nav>

      {{block "content" .}}

      {{end}}

      <div class="row my-footer">
        <div class="col">
            Left
        </div>
        <div class="col">
            Middle
        </div>
        <div class="col">
            Right
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.slim.min.js" integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js" integrity="sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.min.js" integrity="sha384-+sLIOodYLS7CIrQpBjl+C7nPvqq+FbNUBDunl/OZv93DB7Ln/533i8e/mZXLi/P+" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.1.2/dist/js/datepicker-full.min.js"></script>
    <script src="https://unpkg.com/notie"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    
    {{block "js" .}}

    {{end}}
    
    <script>
      let attention = Prompt();

      (function() {
        'use strict';
        window.addEventListener('load', function() {
          // Fetch all the forms we want to apply custom Bootstrap validation styles to
          let forms = document.getElementsByClassName('needs-validation');
          // Loop over them and prevent submission
          Array.prototype.filter.call(forms, function(form) {
            form.addEventListener('submit', function(event) {
              if (form.checkValidity() === false) {
                event.preventDefault();
                event.stopPropagation();
              }
              form.classList.add('was-validated');
            }, false);
          });
        }, false);
      })();



      function alertSuccess(msg) {
        notie.alert({
        type: "success", // optional, default = 4, enum: [1, 2, 3, 4, 5, 'success', 'warning', 'error', 'info', 'neutral']
        text: msg,
        stay: false, // optional, default = false
        time: 3, // optional, default = 3, minimum = 1,
        position: "top" // optional, default = 'top', enum: ['top', 'bottom']
        })
      }

      function notify(msg, msgType){
        notie.alert({
        type: msgType, // optional, default = 4, enum: [1, 2, 3, 4, 5, 'success', 'warning', 'error', 'info', 'neutral']
        text: msg,
        stay: false, // optional, default = false
        time: 1, // optional, default = 3, minimum = 1,
        position: "top" // optional, default = 'top', enum: ['top', 'bottom']
        })
      }
      
      {{with .Error}}
      notify("{{.}}", "error")
      {{end}}

      {{with .Flash}}
      notify("{{.}}", "success")
      {{end}}

      function sweetNotify(msg){
        Swal.fire({
          title: msg,
          width: 600,
          padding: "3em",
          color: "#716add",
          backdrop: `
            rgba(0,0,123,0.4)
            url("static/images/nyan-cat.gif")
            left top
            no-repeat
          `,
        })
      }

      function Prompt() {
        let toast =function(c) {
          const {
              msg = "",
              icon = "success",
              position = "top-end",
          } =c;
          const Toast = Swal.mixin({
            toast: true,
            title: msg,
            position: position,
            icon: icon,
            showConfirmButton: false,
            timer: 3000,
            timerProgressBar: true,
            didOpen: (toast) => {
              toast.onmouseenter = Swal.stopTimer;
              toast.onmouseleave = Swal.resumeTimer;
              }
          });
          Toast.fire({});
        }

        let success =function(c) {
          const {
            msg = "",
            icon = "success",
            title = "Oops..."
          } = c;
          Swal.fire({
            icon: icon,
            title: title,
            text: msg,
            footer: '<a href="#">Why do I have this issue?</a>'
          });
        }

        let error =function(c) {
          const {
            msg = "",
            icon = "error",
            title = "Oops..."
          } = c;
          Swal.fire({
            icon: icon,
            title: title,
            text: msg,
            footer: '<a href="#">Why do I have this issue?</a>'
          });
        }

        async function custom(c) {
            const {
                msg = "",
                title = "",
            } = c;

            const { value: result } = await Swal.fire({
                title: title,
                html: msg,
                backdrop: false,
                focusConfirm: false,
                showCancelButton: true,
                willOpen: () => {
                  if(c.willOpen !== undefined) {
                    c.willOpen();
                  }
                },
                didOpen: () => {
                  if(c.didOpen !== undefined){
                    c.didOpen();
                  }
                },
                preConfirm: () => {
                    return [
                        document.getElementById('start').value,
                        document.getElementById('end').value
                    ]
                }
            })

            if (result) {
              if (result.dismiss !== Swal.DismissReason.cancel){
                if (result.value !== ""){
                  if(c.callback !== undefined){
                    c.callback(result);
                  }
                } else {
                  c.callback(false);
                }
              } else {
                c.callback(false);
              }
            }

        }

        return {
          toast: toast,
          success: success,
          error: error,
          custom: custom,
        }
      }
    </script>

  </body>
</html>
{{end}}